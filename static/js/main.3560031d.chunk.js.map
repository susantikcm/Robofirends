{"version":3,"sources":["logo.svg","Components/page2.js","Components/page3.js","serviceWorker.js","Components/CounterButton.js","Components/Header.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/RobotList.js","Actions/actions.js","constants.js","Components/page1.js","Components/AsyncComponent.js","Containers/App.js","Reducers/robotReducer.js","Reducers/rootReducer.js","index.js"],"names":["module","exports","Page2","onRouteChange","className","src","logo","alt","onClick","Page3","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","CounterButton","updateCount","setState","count","nextProps","nextSate","this","color","props","Component","styles","header","textAlign","padding","backgroundColor","fontWeight","fontSize","borderBottom","link","textDecoration","marginRight","Card","id","name","username","email","CardList","robots","map","user","i","key","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundary","hasError","info","RobotList","onRequestRobots","searchField","onSearchChange","isLoading","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","response","json","data","Page1","asyncComponent","importComponent","component","default","App","route","AsyncPage2","AsyncComponent","AsyncPage3","initialStateSearch","initialStateRobots","combineReducers","action","Object","assign","logger","createLogger","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3560031d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nconst Page2 = ({ onRouteChange }) => \r\n    <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1 className=\"App-title\">Page 2</h1>\r\n        </header>\r\n        <button onClick={() => onRouteChange('page1')}>Page 1</button>\r\n        <button className=\"disabled\">Page 2</button>\r\n        <button onClick={() => onRouteChange('page3')}>Page 3</button>\r\n    </div>\r\n\r\n    export default Page2;","import React from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nconst Page3 = ({ onRouteChange }) => \r\n    <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1 className=\"App-title\">Page 3</h1>\r\n        </header>\r\n        <button onClick={() => onRouteChange('page1')}>Page 1</button>\r\n        <button onClick={() => onRouteChange('page2')}>Page 2</button>\r\n        <button className=\"disabled\">Page 3</button>\r\n    </div>\r\n\r\n    export default Page3; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\nclass CounterButton extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextSate) {\r\n        //console.log(nextProps, nextSate)\r\n        if(this.state.count !== nextSate.count) {\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updateCount = () => {\r\n        this.setState(state => { \r\n            //funny side effect when updating state based on current state\r\n            //state update is not synchronous and update might not happen properly\r\n            //so its better to grab the current state to a new variable before use\r\n            return { count: state.count + 1 }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log('CounterButton');\r\n        return (\r\n            <button color={this.props.color} onClick={this.updateCount}>Count: {this.state.count}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterButton;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n    // shouldComponentUpdate(nextProps, nextSate) {\r\n    //     return false;\r\n    // }\r\n\r\n    render(){\r\n        console.log('Header');\r\n        return (\r\n            <div style={styles.header}>\r\n                <Link style={styles.link} to=\"/RobotList\">Robots</Link>\r\n                <Link style={styles.link} to=\"/About\">About</Link>\r\n                <h1 className='f2'>RoboFriends</h1>\r\n                <CounterButton color={'red'} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    header: {\r\n        textAlign: 'left',\r\n        padding: '20px 100px',\r\n        backgroundColor: '#222',\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        borderBottom: '2px solid #7f7fff'\r\n    },\r\n    link: {\r\n        color: '#fff',\r\n        textDecoration: 'none',\r\n        marginRight: 20\r\n    }\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Card({ id, name, username, email }) {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${username}?size=100x200`} alt='robots' />\r\n            <div>\r\n                <h2>{id}. {name}</h2>\r\n                <p>{username}</p>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList({ robots }) {\r\n    // if(true){\r\n    //     throw new Error('Noooo');        \r\n    // }\r\n    console.log('CardList');\r\n    return(\r\n        <div>\r\n        {\r\n            robots.map((user, i) => {\r\n                return (\r\n                    <Card \r\n                        key={robots[i].id} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        username={robots[i].username} \r\n                        email={robots[i].email} \r\n                    />\r\n                );\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nfunction SearchBox({ searchChange  }) {\r\n    console.log('SearchBox');\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                aria-label='Search Robots'\r\n                className='pa3 ba b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow:'scroll', border:'1px solid black', height:'710px' }}>\r\n            { props.children }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n         this.setState({ hasError: true });\r\n     }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Ooops.. That is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './RobotList.css';\r\n\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\nimport { setSearchField, requestRobots } from '../Actions/actions';\r\n\r\n//mapping the states from reducers\r\nconst mapStateToProps = state => {\r\n    return  {\r\n        searchField: state.searchRobots.searchField,\r\n        isLoading: state.requestRobots.isLoading,\r\n        robots: state.requestRobots.robots,\r\n        error: state.requestRobots.error\r\n    }\r\n}\r\n\r\n//mapping the functions from actions\r\nconst mapDispatchToProps = (dispatch) =>  {\r\n    return {\r\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n        //the dispatch need the requestRobots to return a function \r\n        onRequestRobots: () => dispatch(requestRobots())\r\n    }\r\n}\r\n\r\nclass RobotList extends Component {\r\n    //remove after create state with redux\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state = {\r\n    //         robots: []\r\n    //         //searchField: ''\r\n    //     }\r\n    // }\r\n \r\n    componentDidMount() {\r\n        this.props.onRequestRobots();\r\n        //remove after declare the request robot with redux\r\n        // fetch('https://jsonplaceholder.typicode.com/users')\r\n        //     .then(response => response.json())\r\n        //     .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    //remove this method after declaring it as props from redux\r\n    // onSearchChange = (event) => {\r\n    //     this.setState({ searchField: event.target.value });\r\n    // }\r\n\r\n    render() {\r\n        const { searchField, onSearchChange, robots, isLoading } =  this.props;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n \r\n        return isLoading ?\r\n            <h1>Loading...</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <SearchBox searchChange={onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\n//The connect component from react-redux package\r\n//it is a 'higher order function', means a function that return function\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RobotList); \r\n//mapDispatchToProps = mapActionToProps","import { \r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_LOADING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from '../constants.js';\r\n\r\nexport const setSearchField = (text) => ({\r\n    //console.log(text);\r\n    //return{\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n    //}\r\n})\r\n\r\n//requestRobots is 'higher order function'\r\n//the 1st layer function that takes no param would run the code below, then  \r\n//return everything in this function to the second layer function\r\n//the second layer function takes param 'dispatch' will run the same code below\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_LOADING });\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n        .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_LOADING = 'REQUEST_ROBOTS_LOADING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nconst Page1 = ({ onRouteChange }) => \r\n    <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1 className=\"App-title\">Page 1</h1>\r\n        </header>\r\n        <button className=\"disabled\">Page 1</button>\r\n        <button onClick={() => onRouteChange('page2')}>Page 2</button>\r\n        <button onClick={() => onRouteChange('page3')}>Page 3</button>\r\n    </div>\r\n\r\n    export default Page1;","import React, { Component } from 'react';\r\n\r\n//higher order component, function that return a component\r\nexport default function asyncComponent(importComponent) {\r\n    class AsyncComponent extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                component: null\r\n            }\r\n        }\r\n\r\n        async componentDidMount() {\r\n            const { default: component } /*or just component here*/ = await importComponent();\r\n            this.setState({ component: component /*and add .default here*/ })\r\n        }\r\n\r\n        render() {\r\n            const Component = this.state.component;\r\n            return Component ? <Component {...this.props} /> : null;\r\n        }\r\n    }\r\n\r\n    return AsyncComponent;\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Header from '../Components/Header';\r\nimport Routes from '../Components/Routes';\r\n\r\nimport Page1 from '../Components/page1';\r\nimport Page2 from '../Components/page2';\r\nimport Page3 from '../Components/page3';\r\nimport AsyncComponent from '../Components/AsyncComponent';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            route: 'page1',\r\n            component: null\r\n        }\r\n    }\r\n\r\n    onRouteChange = (route) => {\r\n        //no code splitting\r\n        this.setState({ route: route });\r\n\r\n        //with code splitting\r\n        // if(route === 'page1') {\r\n        //     this.setState({ route: route });\r\n        // }\r\n        // else if (route === 'page2') {\r\n        //     import('../Components/page2')\r\n        //     .then((Page2) => {\r\n        //         this.setState({ route: route, component: Page2.default })\r\n        //     });\r\n        // }\r\n        // else if (route === 'page3') {\r\n        //     import('../Components/page3')\r\n        //     .then((Page3) => {\r\n        //         this.setState({ route: route, component: Page3.default })\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        // return (\r\n        //     <div className=\"App\">\r\n        //         <Header />\r\n        //         <Routes />\r\n        //    </div>\r\n        // );\r\n\r\n        if(this.state.route === 'page1') {\r\n            return <Page1 onRouteChange={this.onRouteChange} />\r\n        }\r\n        else if(this.state.route === 'page2') {\r\n            const AsyncPage2 = AsyncComponent(() => import('../Components/page2'))\r\n            return <AsyncPage2 onRouteChange={this.onRouteChange} />\r\n        }\r\n        else if(this.state.route === 'page3') {\r\n            const AsyncPage3 = AsyncComponent(() => import('../Components/page3'))\r\n            return <AsyncPage3 onRouteChange={this.onRouteChange} />\r\n        }\r\n        \r\n        if(this.state.route === 'page1') {\r\n            return <Page1 onRouteChange={this.onRouteChange} />\r\n        }\r\n        else {\r\n            return <this.state.component onRouteChange={this.onRouteChange} />\r\n        }\r\n    }\r\n}\r\n\r\nexport default App; ","import { \r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_LOADING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from '../constants.js';\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n    //console.log(action.type);\r\n    switch(action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, { searchField:action.payload })\r\n            //return {...state, searchField:action.payload }\r\n            //use 'Spread operator' above for same purpose with cleaner code \r\n            //Spread opr takes object 'state' and destructure its properties into 'new state' object\r\n            //assigning new value to any property existed in the 'new state' object,\r\n            //would replace value in the 'new state' object \r\n            default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n    isLoading: false,\r\n    robots: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n    switch(action.type) {\r\n        case REQUEST_ROBOTS_LOADING:\r\n            return {...state, isLoading:true }\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return {...state, robots:action.payload, isLoading: false }\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return {...state, error:action.payload, isLoading: false }\r\n        default:\r\n            return state;  \r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { searchRobots, requestRobots } from './robotReducer';\r\n//import { searchHumans, requestHumans } from './humanActions';\r\n\r\nexport default combineReducers({\r\n    searchRobots,\r\n    requestRobots,\r\n    //searchHumans,\r\n    //requestHumans\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, /*combineReducers*/ } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nimport './index.css';\nimport App from './Containers/App';\nimport rootReducer from './Reducers/rootReducer';\n\nconst logger = createLogger();\n\n//const rootReducer = combineReducers;\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger)); \n\n//Instead of passing the store to the app like below:\n//ReactDOM.render(<App store={store} />, document.getElementById('root'));\n//Use the 'Provider' component provided by 'react-redux' package,\n//to take care of the passing down the store to all components down the component tree\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}